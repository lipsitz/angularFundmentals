{"version":3,"sources":["webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/profile/profile.component.css","webpack:///./src/app/user/profile/profile.component.html","webpack:///./src/app/user/profile/profile.component.ts","webpack:///./src/app/user/user-routes.module.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"em {\\r\\n    float:right;\\r\\n    color: #E05C65;\\r\\n    padding-left: 10px;\\r\\n}\"","module.exports = \"<h1>Login</h1>\\n<hr>\\n<div class=\\\"col-md-4\\\">\\n  <form #loginForm =\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\"autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" >\\n      <label for=\\\"userName\\\">User Name:</label>\\n      <em *ngIf=\\\"loginForm.controls.userName?.invalid && (loginForm.controls.userName?.touched || mouseoverLogin)\\\">required</em>\\n      <input (ngModel)=\\\"userName\\\"  required name=\\\"userName\\\"id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User Name...\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\" >\\n      <label for=\\\"password\\\">Password:</label>\\n      <em *ngIf=\\\"loginForm.controls.password?.invalid && (loginForm.controls.password?.touched || mouseoverLogin )\\\">required</em>\\n      <input (ngModel)=\\\"password\\\" required name=\\\"password\\\"id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\"placeholder=\\\"Password...\\\" />\\n    </div>\\n        <span (mouseenter)=\\\"mouseoverLogin=true\\\" (mouseleave)=\\\"mouseoverLogin=fasle\\\" >\\n            <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-primary\\\">Login</button>\\n        </span>\\n    <button (click)=\\\"cancel()\\\"type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../shared/services/auth/auth.service'\nimport {Router } from '@angular/router'\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  userName\n  password\n  mouseoverLogin\n  constructor(private authService:AuthService , private router:Router) { }\n\n  ngOnInit() {\n  }\n\nlogin(data){\n  console.log(data);\n  \nthis.authService.loginUser(data.userName , data.password)\nthis.router.navigate(['events'])\n}\ncancel(){\n  this.router.navigate(['events'])\n}\n}\n","module.exports = \"em {\\r\\n    float:right;\\r\\n    color: #E05C65;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n.error input {background-color: #E3C3C5;}\\r\\n.error ::-webkit-input-placeholder {color: #999;}\\r\\n.error ::-webkit-input-placeholder {color: #999;}\\r\\n.error ::-moz-placeholder {color: #999;}\\r\\n.error :-moz-placeholder {color: #999;}\\r\\n.error :-ms-input-placeholder {color: #999;}\\r\\n\\r\\n\"","module.exports = \"<div>\\n  <h1>Edit Your Profile </h1>\\n  <hr>\\n  <div class=\\\"col-md-4\\\">\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"saveProfile(profileForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'error' : !validateFirstName()}\\\">\\n        <label for=\\\"firstName\\\">First Name:</label>\\n        <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.required\\\">Required</em>\\n        <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.pattern\\\">Only letters</em>\\n        <input formControlName=\\\"firstName\\\" id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'error': !validateLastName()}\\\">\\n        <em *ngIf=\\\"!validateLastName() && profileForm.controls.lastName.errors.required\\\">Required</em>\\n        <em *ngIf=\\\"!validateLastName() && profileForm.controls.lastName.errors.pattern\\\">Only letters</em>\\n        <label for=\\\"lastName\\\">Last Name:</label>\\n        <input formControlName =\\\"lastName\\\" id=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\n      </div>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n      <button (click)=\\\"cancel()\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormControl} from '@angular/forms'\nimport {AuthService } from '../../shared/services/auth/auth.service';\nimport { Router } from '@angular/router'\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\nprofileForm:FormGroup\nprivate lastName:FormControl\nprivate firstName:FormControl\n  constructor(private authService:AuthService , private router:Router) { }\n\n  ngOnInit() {\n    this.firstName = new FormControl(this.authService.currentUser.firstName, [Validators.required,Validators.pattern('[a-zA-Z ]*') ])\n    this.lastName = new FormControl(this.authService.currentUser.lastName , [Validators.required, Validators.pattern('[a-zA-Z ]*')  ])\n    this.profileForm = new FormGroup({\n      firstName : this.firstName,\n      lastName : this.lastName\n    })\n  }\n  saveProfile(formValues){\n    if(this.profileForm.valid){\nthis.authService.updateCurrentUser(formValues.firstName , formValues.lastName)\nthis.router.navigate(['events'])\n    }\n  }\n  validateFirstName(){\n   return this.firstName.valid || this.firstName.untouched\n  }\n\n  validateLastName(){\n   return  this.lastName.valid || this.lastName.untouched\n  }\n  cancel(){\n  this.router.navigate(['events'])\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileComponent} from './profile/profile.component' \nimport { LoginComponent} from './login/login.component' \n\n\n\nexport const userRoutes = [\n{path : \"profile\" ,component: ProfileComponent },\n{path : \"login\" ,component: LoginComponent }\n\n\n\n\n]\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class UserRoutesModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule } from '@angular/router';\nimport {userRoutes } from './user-routes.module';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(userRoutes),\n    ReactiveFormsModule\n  ],\n  declarations: [ProfileComponent, LoginComponent],\n  providers:[]\n})\nexport class UserModule { }\n"],"sourceRoot":""}